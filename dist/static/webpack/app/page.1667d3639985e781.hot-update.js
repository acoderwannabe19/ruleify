"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/page.tsx":
/*!**************************!*\
  !*** ./src/app/page.tsx ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Page; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_shared_upload_data_file__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/shared/upload_data_file */ \"(app-pages-browser)/./src/app/components/shared/upload_data_file.tsx\");\n/* harmony import */ var bootstrap_dist_css_bootstrap_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bootstrap/dist/css/bootstrap.css */ \"(app-pages-browser)/./node_modules/bootstrap/dist/css/bootstrap.css\");\n/* harmony import */ var _components_shared_rule_creator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/shared/rule_creator */ \"(app-pages-browser)/./src/app/components/shared/rule_creator.tsx\");\n/* harmony import */ var _components_constants_static__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/constants/static */ \"(app-pages-browser)/./src/app/components/constants/static.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\nfunction Page() {\n    _s();\n    const obj = {\n        selectedCol: [\n            \"\"\n        ],\n        selectedRule: \"areAnyComplete\",\n        selectedOperator: \"None\",\n        selectedValue: null,\n        selectedAssertion: \"\",\n        columnErrorMessage: \"\",\n        assertionErrorMessage: \"\",\n        allowedValuesErrorMessage: \"\",\n        allowedValues: Array.from(\"\"),\n        pattern: \"\",\n        datatype: \"Numeric\",\n        isValueDisabled: true,\n        isAssertion: false,\n        isColumnDisabled: false,\n        isAssertionMandatory: false,\n        noLimit: -1,\n        isColumnValid: false,\n        isAssertionValid: true,\n        isRuleValid: false\n    };\n    const [listObj, setListObj] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([\n        obj\n    ]);\n    const [list, setList] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [ruleCount, setRuleCount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(1);\n    let jsonStructure = {\n        check: {}\n    };\n    let finalJsonStructure = {\n        \"checks\": []\n    };\n    const isColumnSelectionValid = (obj)=>{\n        if (!obj.isColumnDisabled) {\n            if (_components_constants_static__WEBPACK_IMPORTED_MODULE_5__.list_column_column_assert_hint.includes(obj.selectedRule) && obj.selectedCol.length != 2 || !_components_constants_static__WEBPACK_IMPORTED_MODULE_5__.list_column_column_assert_hint.includes(obj.selectedRule) && obj.selectedCol.length == 0 || !_components_constants_static__WEBPACK_IMPORTED_MODULE_5__.list_column_column_assert_hint.includes(obj.selectedRule) && obj.selectedCol[0].length == 0) {\n                return false;\n            } else {\n                return true;\n            }\n        } else {\n            return true;\n        }\n    };\n    const isAssertionValid = (obj)=>{\n        if (obj.selectedOperator !== \"None\" && obj.selectedValue == null || obj.selectedOperator !== \"None\" && obj.selectedValue == \"\") {\n            return false;\n        } else {\n            return true;\n        }\n    };\n    const isAllowedValuesValid = (obj)=>{\n        if (_components_constants_static__WEBPACK_IMPORTED_MODULE_5__.list_column_allowed_values_assert_hint.includes(obj.selectedRule) && (obj.allowedValues.length === 0 || obj.allowedValues[0] === 0)) {\n            return false;\n        } else {\n            return true;\n        }\n    };\n    const isFormValid = ()=>{\n        let isFormValid = true;\n        let updatedListObject = [\n            ...listObj\n        ];\n        for(let i = 0; i < updatedListObject.length; i++){\n            if (!isColumnSelectionValid(updatedListObject[i])) {\n                _components_constants_static__WEBPACK_IMPORTED_MODULE_5__.list_column_column_assert_hint.includes(updatedListObject[i].selectedRule) ? updatedListObject[i].columnErrorMessage = \"*Please choose two columns!\" : updatedListObject[i].columnErrorMessage = \"*Please choose column (s)!\";\n                isFormValid = false;\n            } else if (!isAssertionValid(updatedListObject[i])) {\n                updatedListObject[i].assertionErrorMessage = \"*Please choose an operator and a value!\";\n                isFormValid = false;\n            } else if (!isAllowedValuesValid(updatedListObject[i])) {\n                updatedListObject[i].allowedValuesErrorMessage = \"*Please enter and separate values by semi-colon!\";\n                isFormValid = false;\n            }\n            setListObj(updatedListObject);\n        }\n        return isFormValid;\n    };\n    const handleSelectColumns = (selectedList, index)=>{\n        const selectedCols = selectedList.map((obj)=>obj.key);\n        const updatedListObject = [\n            ...listObj\n        ];\n        updatedListObject[index].selectedCol = selectedCols;\n        updatedListObject[index].columnErrorMessage = \"\";\n        setListObj(updatedListObject);\n    };\n    const handleSelectValue = (selected, index)=>{\n        const updatedListObject = [\n            ...listObj\n        ];\n        updatedListObject[index].selectedValue = selected.target.value;\n        updatedListObject[index].assertionErrorMessage = \"\";\n        setListObj(updatedListObject);\n    };\n    const handleAllowedValuesInput = (selected, index)=>{\n        let updatedListObject = [\n            ...listObj\n        ];\n        selected = selected.target.value;\n        if (!selected.includes(\" \") && !selected.includes(\",\") && !selected.includes(\"_\") && !selected.includes(\":\") && !selected.includes(\"/\") && !selected.includes(\"\\\\\")) {\n            updatedListObject[index].allowedValues = selected.split(\";\");\n        } else {\n            updatedListObject[index].allowedValues = Array.from(\"\");\n        }\n        updatedListObject[index].allowedValuesErrorMessage = \"\";\n        setListObj(updatedListObject);\n    };\n    const handleDatatypeSelection = (selected, index)=>{\n        const updatedListObject = [\n            ...listObj\n        ];\n        updatedListObject[index].datatype = selected.target.value;\n        setListObj(updatedListObject);\n    };\n    const handleSelectRule = (selected, index)=>{\n        const updatedListObject = [\n            ...listObj\n        ];\n        updatedListObject[index].selectedRule = selected.target.value;\n        const rule = selected.target.value;\n        if (_components_constants_static__WEBPACK_IMPORTED_MODULE_5__.list_column_hint.includes(rule) || _components_constants_static__WEBPACK_IMPORTED_MODULE_5__.list_columns.includes(rule)) {\n            updatedListObject[index].isAssertion = true;\n        } else {\n            updatedListObject[index].isAssertion = false;\n        }\n        if (_components_constants_static__WEBPACK_IMPORTED_MODULE_5__.mandatory_assert.includes(rule)) {\n            updatedListObject[index].isAssertionMandatory = true;\n            updatedListObject[index].isValueDisabled = false;\n        } else {\n            updatedListObject[index].isAssertionMandatory = false;\n            updatedListObject[index].isValueDisabled = true;\n        }\n        if (rule == \"hasSize\") {\n            updatedListObject[index].isColumnDisabled = true;\n        } else {\n            updatedListObject[index].isColumnDisabled = false;\n        }\n        if (_components_constants_static__WEBPACK_IMPORTED_MODULE_5__.list_column_hint.includes(rule) || _components_constants_static__WEBPACK_IMPORTED_MODULE_5__.list_column_assert_binning_udf_max_bin_hint.includes(rule) || _components_constants_static__WEBPACK_IMPORTED_MODULE_5__.list_column_assert_hint.includes(rule) || _components_constants_static__WEBPACK_IMPORTED_MODULE_5__.list_column_datatype_assert_hint.includes(rule) || _components_constants_static__WEBPACK_IMPORTED_MODULE_5__.list_column_quantile_assert_hint.includes(rule) || _components_constants_static__WEBPACK_IMPORTED_MODULE_5__.list_column_allowed_values_assert_hint.includes(rule)) {\n            updatedListObject[index].noLimit = 1;\n        } else if (_components_constants_static__WEBPACK_IMPORTED_MODULE_5__.list_column_column_assert_hint.includes(rule)) {\n            updatedListObject[index].noLimit = 2;\n        } else {\n            updatedListObject[index].noLimit = -1;\n        }\n        setListObj(updatedListObject);\n    };\n    const handleSelectOperator = (selected, index)=>{\n        const updatedListObject = [\n            ...listObj\n        ];\n        updatedListObject[index].selectedOperator = selected.target.value;\n        updatedListObject[index].assertionErrorMessage = \"\";\n        if (updatedListObject[index].selectedOperator != \"None\") {\n            updatedListObject[index].isValueDisabled = false;\n        } else {\n            updatedListObject[index].isValueDisabled = true;\n        }\n        if (updatedListObject[index].selectedValue == null && updatedListObject[index].selectedOperator != \"None\") {\n            updatedListObject[index].isAssertionValid = false;\n        } else {\n            updatedListObject[index].isAssertionValid = true;\n        }\n        setListObj(updatedListObject);\n    };\n    const handleRemovedCol = (selected, index)=>{\n        const updatedListObject = [\n            ...listObj\n        ];\n        var keyValues = [];\n        for(var i = 0; i < selected.length; i++){\n            keyValues.push(selected[i].key);\n        }\n        updatedListObject[index].selectedCol = keyValues;\n        setListObj(updatedListObject);\n    };\n    const addRule = ()=>{\n        setListObj([\n            ...listObj,\n            obj\n        ]);\n        setRuleCount(ruleCount + 1);\n        console.log(listObj[0]);\n    };\n    const deleteRule = (index)=>{\n        let updatedListObject = [\n            ...listObj\n        ];\n        updatedListObject = updatedListObject.filter((_, i)=>i !== index);\n        setListObj(updatedListObject);\n        setRuleCount(ruleCount - 1);\n    };\n    function writeRuleToRulesFile(selectedRules) {\n        selectedRules.map((rule)=>{\n            jsonStructure = {\n                check: {\n                    \"rule\": rule\n                }\n            };\n            finalJsonStructure.checks.push(jsonStructure);\n        });\n    }\n    function writeColumnsAndAssertToRulesFile(listObj, finalJsonStructure) {\n        let rule;\n        let lambdaExpression;\n        for(let numCheck = 0; numCheck < finalJsonStructure.checks.length; numCheck++){\n            rule = finalJsonStructure.checks[numCheck].check.rule;\n            if (_components_constants_static__WEBPACK_IMPORTED_MODULE_5__.list_columns.includes(rule) || _components_constants_static__WEBPACK_IMPORTED_MODULE_5__.list_columns_assert_hint.includes(rule)) {\n                finalJsonStructure.checks[numCheck][\"check\"][\"columns\"] = JSON.stringify(listObj[numCheck].selectedCol);\n            } else if (_components_constants_static__WEBPACK_IMPORTED_MODULE_5__.list_column_column_assert_hint.includes(rule)) {\n                finalJsonStructure.checks[numCheck][\"check\"][\"columnA\"] = listObj[numCheck].selectedCol[0];\n                finalJsonStructure.checks[numCheck][\"check\"][\"columnB\"] = listObj[numCheck].selectedCol[1];\n            } else {\n                if (!_components_constants_static__WEBPACK_IMPORTED_MODULE_5__.list_assert_hint.includes(rule)) {\n                    finalJsonStructure.checks[numCheck][\"check\"][\"column\"] = listObj[numCheck].selectedCol[0];\n                }\n            }\n            if (_components_constants_static__WEBPACK_IMPORTED_MODULE_5__.list_column_allowed_values_assert_hint.includes(rule)) {\n                finalJsonStructure.checks[numCheck][\"check\"][\"allowed_values\"] = JSON.stringify(listObj[numCheck].allowedValues);\n            }\n            if (_components_constants_static__WEBPACK_IMPORTED_MODULE_5__.list_column_datatype_assert_hint.includes(rule)) {\n                finalJsonStructure.checks[numCheck][\"check\"][\"datatype\"] = listObj[numCheck].datatype;\n            }\n            if (listObj[numCheck].selectedOperator != \"None\") {\n                lambdaExpression = \"lambda x : x \".concat(listObj[numCheck].selectedOperator, \" \").concat(listObj[numCheck].selectedValue);\n                finalJsonStructure.checks[numCheck][\"check\"][\"assertion\"] = lambdaExpression;\n            }\n            if (listObj[numCheck].selectedOperator == \"None\" && !_components_constants_static__WEBPACK_IMPORTED_MODULE_5__.mandatory_assert.includes(rule)) {\n                finalJsonStructure.checks[numCheck][\"check\"][\"assertion\"] = \"None\";\n            }\n            if (_components_constants_static__WEBPACK_IMPORTED_MODULE_5__.list_column_hint.includes(rule) || _components_constants_static__WEBPACK_IMPORTED_MODULE_5__.list_columns.includes(rule)) {\n                delete finalJsonStructure.checks[numCheck][\"check\"].assertion;\n            }\n        }\n    }\n    function saveRulesToFile() {\n        // console.log(isFormValid());    \n        if (isFormValid()) {\n            const selectedRules = listObj.map((obj)=>obj.selectedRule);\n            writeRuleToRulesFile(selectedRules);\n            writeColumnsAndAssertToRulesFile(listObj, finalJsonStructure);\n            const jsonData = JSON.stringify(finalJsonStructure, null, \"\t\");\n            const blob = new Blob([\n                jsonData\n            ], {\n                type: \"application/json\"\n            });\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement(\"a\");\n            a.href = url;\n            a.download = \"rules.json\";\n            a.click();\n            URL.revokeObjectURL(url);\n        }\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"p-5\",\n        style: {\n            fontFamily: \"Montserrat\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                children: \"Ruleify\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\dell\\\\ruleify\\\\src\\\\app\\\\page.tsx\",\n                lineNumber: 298,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                name: \"viewport\",\n                content: \"initial-scale=1.0, width=device-width\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\dell\\\\ruleify\\\\src\\\\app\\\\page.tsx\",\n                lineNumber: 299,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_shared_upload_data_file__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                onListChange: setList\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\dell\\\\ruleify\\\\src\\\\app\\\\page.tsx\",\n                lineNumber: 300,\n                columnNumber: 7\n            }, this),\n            Array.from({\n                length: ruleCount\n            }).map((_, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_shared_rule_creator__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                    handleAllowedValuesInput: (selected)=>handleAllowedValuesInput(selected, index),\n                    handleDatatypeSelection: (selected)=>handleDatatypeSelection(selected, index),\n                    handleRemovedCols: (selected)=>handleRemovedCol(selected, index),\n                    handleDeletion: ()=>deleteRule(index),\n                    handleRuleSelection: (selected)=>handleSelectRule(selected, index),\n                    handleValueSelection: (selected)=>handleSelectValue(selected, index),\n                    handleOperatorSelection: (selected)=>handleSelectOperator(selected, index),\n                    handleColSelection: (selectedList)=>handleSelectColumns(selectedList, index),\n                    columns: list,\n                    componentKey: index,\n                    obj: listObj[index]\n                }, index, false, {\n                    fileName: \"C:\\\\Users\\\\dell\\\\ruleify\\\\src\\\\app\\\\page.tsx\",\n                    lineNumber: 303,\n                    columnNumber: 9\n                }, this)),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex justify-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"btn btn-outline-success m-3\",\n                        onClick: addRule,\n                        children: \"+ Add a rule\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\dell\\\\ruleify\\\\src\\\\app\\\\page.tsx\",\n                        lineNumber: 320,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: saveRulesToFile,\n                        className: \"btn btn-outline-success m-3\",\n                        children: \"Save locally\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\dell\\\\ruleify\\\\src\\\\app\\\\page.tsx\",\n                        lineNumber: 323,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\dell\\\\ruleify\\\\src\\\\app\\\\page.tsx\",\n                lineNumber: 319,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\dell\\\\ruleify\\\\src\\\\app\\\\page.tsx\",\n        lineNumber: 297,\n        columnNumber: 5\n    }, this);\n}\n_s(Page, \"zAHVvdK+PFPd/iwnGsoeeZXDnxg=\");\n_c = Page;\nvar _c;\n$RefreshReg$(_c, \"Page\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/page.tsx\n"));

/***/ })

});