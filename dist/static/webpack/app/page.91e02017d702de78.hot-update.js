"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/components/constants/static.tsx":
/*!*************************************************!*\
  !*** ./src/app/components/constants/static.tsx ***!
  \*************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   function_descriptions: function() { return /* binding */ function_descriptions; },\n/* harmony export */   list_assert_hint: function() { return /* binding */ list_assert_hint; },\n/* harmony export */   list_column_allowed_values_assert_hint: function() { return /* binding */ list_column_allowed_values_assert_hint; },\n/* harmony export */   list_column_assert_binning_udf_max_bin_hint: function() { return /* binding */ list_column_assert_binning_udf_max_bin_hint; },\n/* harmony export */   list_column_assert_hint: function() { return /* binding */ list_column_assert_hint; },\n/* harmony export */   list_column_column_assert_hint: function() { return /* binding */ list_column_column_assert_hint; },\n/* harmony export */   list_column_datatype_assert_hint: function() { return /* binding */ list_column_datatype_assert_hint; },\n/* harmony export */   list_column_hint: function() { return /* binding */ list_column_hint; },\n/* harmony export */   list_column_pattern_assert_name_hint: function() { return /* binding */ list_column_pattern_assert_name_hint; },\n/* harmony export */   list_column_quantile_assert_hint: function() { return /* binding */ list_column_quantile_assert_hint; },\n/* harmony export */   list_columns: function() { return /* binding */ list_columns; },\n/* harmony export */   list_columns_assert_hint: function() { return /* binding */ list_columns_assert_hint; },\n/* harmony export */   mandatory_assert: function() { return /* binding */ mandatory_assert; },\n/* harmony export */   rules_list: function() { return /* binding */ rules_list; }\n/* harmony export */ });\nconst rules_list = [\n    \"areAnyComplete\",\n    \"areComplete\",\n    \"containsCreditCardNumber\",\n    \"containsEmail\",\n    \"containsSocialSecurityNumber\",\n    \"containsURL\",\n    \"hasApproxCountDistinct\",\n    \"hasCompleteness\",\n    \"hasCorrelation\",\n    \"hasDataType\",\n    \"hasEntropy\",\n    \"hasMax\",\n    \"hasMean\",\n    \"hasMin\",\n    \"hasMinLength\",\n    \"hasMutualInformation\",\n    ,\n    \"hasSize\",\n    \"hasStandardDeviation\",\n    \"hasSum\",\n    \"hasUniqueValueRatio\",\n    \"hasUniqueness\",\n    \"isContainedIn\",\n    \"isComplete\",\n    \"isGreaterThanOrEqualTo\",\n    \"isGreaterThan\",\n    \"isLessThan\",\n    \"isLessThanOrEqualTo\",\n    \"isNonNegative\",\n    \"isPositive\",\n    \"isUnique\",\n    \"haveAnyCompleteness\",\n    \"haveCompleteness\"\n];\nconst mandatory_assert = [\n    \"hasApproxCountDistinct\",\n    \"hasApproxQuantile\",\n    \"hasCompleteness\",\n    \"hasCorrelation\",\n    \"hasDistinctness\",\n    \"hasEntropy\",\n    \"hasHistogramValues\",\n    \"hasMax\",\n    \"hasMaxLength\",\n    \"hasMean\",\n    \"hasMean\",\n    \"hasMin\",\n    \"hasMinLength\",\n    \"hasMutualInformation\",\n    \"hasNumberOfDistinctValues\",\n    \"hasSize\",\n    \"hasStandardDeviation\",\n    \"hasSum\",\n    \"hasUniqueValueRatio\",\n    \"hasUniqueness\",\n    \"haveCompleteness\",\n    \"haveAnyCompleteness\"\n];\nconst list_columns = [\n    \"areComplete\",\n    \"areAnyComplete\"\n];\nconst list_column_assert_hint = [\n    \"hasApproxCountDistinct\",\n    \"containsURL\",\n    \"containsSocialSecurityNumber\",\n    \"containsEmail\",\n    \"containsCreditCardNumber\",\n    \"hasCompleteness\",\n    \"hasEntropy\",\n    \"hasMax\",\n    \"hasMaxLength\",\n    \"hasMean\",\n    \"hasMin\",\n    \"hasMinLength\",\n    \"hasStandardDeviation\",\n    \"hasSum\",\n    \"isPositive\",\n    \"isNonNegative\"\n];\nconst list_columns_assert_hint = [\n    \"haveCompleteness\",\n    \"haveAnyCompleteness\",\n    \"hasUniqueness\",\n    \"hasUniqueValueRatio\",\n    \"hasDistinctness\"\n];\nconst list_column_hint = [\n    \"isUnique\",\n    \"isComplete\"\n];\nconst list_assert_hint = [\n    \"hasSize\"\n];\nconst list_column_quantile_assert_hint = [\n    \"hasApproxQuantile\"\n];\nconst list_column_column_assert_hint = [\n    \"hasCorrelation\",\n    \"hasMutualInformation\",\n    \"isGreaterThan\",\n    \"isGreaterThanOrEqualTo\",\n    \"isLessThan\",\n    \"isLessThanOrEqualTo\"\n];\nconst list_column_allowed_values_assert_hint = [\n    \"isContainedIn\"\n];\nconst list_column_pattern_assert_name_hint = [];\nconst list_column_datatype_assert_hint = [\n    \"hasDataType\"\n];\nconst list_column_assert_binning_udf_max_bin_hint = [\n    \"hasHistogramValues\",\n    \"hasNumberOfDistinctValues\"\n];\nconst function_descriptions = {\n    \"areComplete\": \"V\\xe9rifie si toutes les colonnes sp\\xe9cifi\\xe9es sont compl\\xe8tes.\",\n    \"areAnyComplete\": \"V\\xe9rifie si au moins une des colonnes sp\\xe9cifi\\xe9es est compl\\xe8te.\",\n    \"hasApproxCountDistinct\": \"V\\xe9rifie si le nombre distinct d'une colonne est approximativement \\xe9gal \\xe0 une valeur donn\\xe9e.\",\n    \"containsURL\": \"V\\xe9rifie si une colonne contient des URL.\",\n    \"containsSocialSecurityNumber\": \"V\\xe9rifie si une colonne contient des num\\xe9ros de s\\xe9curit\\xe9 sociale.\",\n    \"containsEmail\": \"V\\xe9rifie si une colonne contient des adresses e-mail.\",\n    \"containsCreditCardNumber\": \"V\\xe9rifie si une colonne contient des num\\xe9ros de carte de cr\\xe9dit.\",\n    \"hasCompleteness\": \"V\\xe9rifie la compl\\xe9tude d'une colonne.\",\n    \"hasEntropy\": \"V\\xe9rifie l'entropie d'une colonne.\",\n    \"hasMax\": \"V\\xe9rifie si la valeur maximale d'une colonne est \\xe9gale \\xe0 une valeur donn\\xe9e.\",\n    \"hasMaxLength\": \"V\\xe9rifie si la longueur maximale d'une colonne de type String est \\xe9gale \\xe0 une valeur donn\\xe9e.\",\n    \"hasMean\": \"V\\xe9rifie si la moyenne d'une colonne num\\xe9rique est \\xe9gale \\xe0 une valeur donn\\xe9e.\",\n    \"hasMin\": \"V\\xe9rifie si la valeur minimale d'une colonne est \\xe9gale \\xe0 une valeur donn\\xe9e.\",\n    \"hasMinLength\": \"V\\xe9rifie si la longueur minimale d'une colonne de type String est \\xe9gale \\xe0 une valeur donn\\xe9e.\",\n    \"hasStandardDeviation\": \"V\\xe9rifie si l'\\xe9cart type d'une colonne num\\xe9rique est \\xe9gal \\xe0 une valeur donn\\xe9e.\",\n    \"hasSum\": \"V\\xe9rifie si la somme d'une colonne num\\xe9rique est \\xe9gale \\xe0 une valeur donn\\xe9e.\",\n    \"isPositive\": \"V\\xe9rifie si toutes les valeurs d'une colonne num\\xe9rique sont positives.\",\n    \"isNonNegative\": \"V\\xe9rifie si toutes les valeurs d'une colonne num\\xe9rique sont non n\\xe9gatives.\",\n    \"haveCompleteness\": \"V\\xe9rifie la compl\\xe9tude de plusieurs colonnes sp\\xe9cifi\\xe9es.\",\n    \"haveAnyCompleteness\": \"V\\xe9rifie si au moins une des colonnes sp\\xe9cifi\\xe9es est compl\\xe8te pour chaque ligne.\",\n    \"hasUniqueness\": \"V\\xe9rifie l'unicit\\xe9 d'une colonne ou d'un ensemble de colonnes.\",\n    \"hasUniqueValueRatio\": \"V\\xe9rifie le ratio d'unicit\\xe9 d'une colonne ou d'un ensemble de colonnes.\",\n    \"isUnique\": \"V\\xe9rifie si toutes les valeurs d'une colonne sont uniques.\",\n    \"isComplete\": \"V\\xe9rifie si toutes les colonnes sp\\xe9cifi\\xe9es dans un ensemble sont compl\\xe8tes.\",\n    \"hasSize\": \"V\\xe9rifie si le nombre d'\\xe9l\\xe9ments dans un ensemble est \\xe9gal \\xe0 une valeur donn\\xe9e.\",\n    \"hasApproxQuantile\": \"V\\xe9rifie si le quantile approximatif d'une colonne num\\xe9rique est \\xe9gal \\xe0 une valeur donn\\xe9e.\",\n    \"hasCorrelation\": \"V\\xe9rifie la corr\\xe9lation entre deux colonnes num\\xe9riques.\",\n    \"hasMutualInformation\": \"V\\xe9rifie l'information mutuelle entre deux colonnes.\",\n    \"isGreaterThan\": \"V\\xe9rifie si la valeur d'une colonne num\\xe9rique est sup\\xe9rieure \\xe0 une valeur donn\\xe9e.\",\n    \"isGreaterThanOrEqualTo\": \"V\\xe9rifie si la valeur d'une colonne num\\xe9rique est sup\\xe9rieure ou \\xe9gale \\xe0 une valeur donn\\xe9e.\",\n    \"isLessThan\": \"V\\xe9rifie si la valeur d'une colonne num\\xe9rique est inf\\xe9rieure \\xe0 une valeur donn\\xe9e.\",\n    \"isLessThanOrEqualTo\": \"V\\xe9rifie si la valeur d'une colonne num\\xe9rique est inf\\xe9rieure ou \\xe9gale \\xe0 une valeur donn\\xe9e.\",\n    \"isContainedIn\": \"V\\xe9rifie si les valeurs d'une colonne sont contenues dans un ensemble sp\\xe9cifi\\xe9.\",\n    \"hasDataType\": \"V\\xe9rifie le type de donn\\xe9es d'une colonne.\",\n    \"hasHistogramValues\": \"V\\xe9rifie si les valeurs d'une colonne num\\xe9rique correspondent \\xe0 un histogramme sp\\xe9cifi\\xe9.\",\n    \"hasNumberOfDistinctValues\": \"V\\xe9rifie si le nombre distinct de valeurs d'une colonne est \\xe9gal \\xe0 une valeur donn\\xe9e.\"\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/components/constants/static.tsx\n"));

/***/ })

});