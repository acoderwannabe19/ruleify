"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/components/constants/static.tsx":
/*!*************************************************!*\
  !*** ./src/app/components/constants/static.tsx ***!
  \*************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   function_descriptions: function() { return /* binding */ function_descriptions; },\n/* harmony export */   list_assert_hint: function() { return /* binding */ list_assert_hint; },\n/* harmony export */   list_column_allowed_values_assert_hint: function() { return /* binding */ list_column_allowed_values_assert_hint; },\n/* harmony export */   list_column_assert_binning_udf_max_bin_hint: function() { return /* binding */ list_column_assert_binning_udf_max_bin_hint; },\n/* harmony export */   list_column_assert_hint: function() { return /* binding */ list_column_assert_hint; },\n/* harmony export */   list_column_column_assert_hint: function() { return /* binding */ list_column_column_assert_hint; },\n/* harmony export */   list_column_datatype_assert_hint: function() { return /* binding */ list_column_datatype_assert_hint; },\n/* harmony export */   list_column_hint: function() { return /* binding */ list_column_hint; },\n/* harmony export */   list_column_pattern_assert_name_hint: function() { return /* binding */ list_column_pattern_assert_name_hint; },\n/* harmony export */   list_column_quantile_assert_hint: function() { return /* binding */ list_column_quantile_assert_hint; },\n/* harmony export */   list_columns: function() { return /* binding */ list_columns; },\n/* harmony export */   list_columns_assert_hint: function() { return /* binding */ list_columns_assert_hint; },\n/* harmony export */   mandatory_assert: function() { return /* binding */ mandatory_assert; },\n/* harmony export */   rules_list: function() { return /* binding */ rules_list; }\n/* harmony export */ });\nconst rules_list = [\n    \"areAnyComplete\",\n    \"areComplete\",\n    \"containsCreditCardNumber\",\n    \"containsEmail\",\n    \"containsSocialSecurityNumber\",\n    \"containsURL\",\n    \"hasApproxCountDistinct\",\n    \"hasCorrelation\",\n    \"hasDataType\",\n    \"hasEntropy\",\n    \"hasMax\",\n    \"hasMean\",\n    \"hasMin\",\n    \"hasMinLength\",\n    \"hasMutualInformation\",\n    ,\n    \"hasSize\",\n    \"hasStandardDeviation\",\n    \"hasSum\",\n    \"hasUniqueValueRatio\",\n    \"hasUniqueness\",\n    \"isContainedIn\",\n    \"isComplete\",\n    \"isGreaterThanOrEqualTo\",\n    \"isGreaterThan\",\n    \"isLessThan\",\n    \"isLessThanOrEqualTo\",\n    \"isNonNegative\",\n    \"isPositive\",\n    \"isUnique\",\n    \"haveAnyCompleteness\",\n    \"haveCompleteness\"\n];\nconst mandatory_assert = [\n    \"hasApproxCountDistinct\",\n    \"hasApproxQuantile\",\n    \"hasCompleteness\",\n    \"hasCorrelation\",\n    \"hasDistinctness\",\n    \"hasEntropy\",\n    \"hasHistogramValues\",\n    \"hasMax\",\n    \"hasMaxLength\",\n    \"hasMean\",\n    \"hasMean\",\n    \"hasMin\",\n    \"hasMinLength\",\n    \"hasMutualInformation\",\n    \"hasNumberOfDistinctValues\",\n    \"hasSize\",\n    \"hasStandardDeviation\",\n    \"hasSum\",\n    \"hasUniqueValueRatio\",\n    \"hasUniqueness\",\n    \"haveCompleteness\",\n    \"haveAnyCompleteness\"\n];\nconst list_columns = [\n    \"areComplete\",\n    \"areAnyComplete\"\n];\nconst list_column_assert_hint = [\n    \"hasApproxCountDistinct\",\n    \"containsURL\",\n    \"containsSocialSecurityNumber\",\n    \"containsEmail\",\n    \"containsCreditCardNumber\",\n    \"hasCompleteness\",\n    \"hasEntropy\",\n    \"hasMax\",\n    \"hasMaxLength\",\n    \"hasMean\",\n    \"hasMin\",\n    \"hasMinLength\",\n    \"hasStandardDeviation\",\n    \"hasSum\",\n    \"isPositive\",\n    \"isNonNegative\"\n];\nconst list_columns_assert_hint = [\n    \"haveCompleteness\",\n    \"haveAnyCompleteness\",\n    \"hasUniqueness\",\n    \"hasUniqueValueRatio\",\n    \"hasDistinctness\"\n];\nconst list_column_hint = [\n    \"isUnique\",\n    \"isComplete\"\n];\nconst list_assert_hint = [\n    \"hasSize\"\n];\nconst list_column_quantile_assert_hint = [\n    \"hasApproxQuantile\"\n];\nconst list_column_column_assert_hint = [\n    \"hasCorrelation\",\n    \"hasMutualInformation\",\n    \"isGreaterThan\",\n    \"isGreaterThanOrEqualTo\",\n    \"isLessThan\",\n    \"isLessThanOrEqualTo\"\n];\nconst list_column_allowed_values_assert_hint = [\n    \"isContainedIn\"\n];\nconst list_column_pattern_assert_name_hint = [];\nconst list_column_datatype_assert_hint = [\n    \"hasDataType\"\n];\nconst list_column_assert_binning_udf_max_bin_hint = [\n    \"hasHistogramValues\",\n    \"hasNumberOfDistinctValues\"\n];\nconst function_descriptions = {\n    \"areComplete\": \"Checks if all specified columns are complete.\",\n    \"areAnyComplete\": \"Checks if at least one of the specified columns is complete.\",\n    \"hasApproxCountDistinct\": \"Checks if the distinct count of a column is approximately equal to a given value.\",\n    \"containsURL\": \"Checks if a column contains URLs.\",\n    \"containsSocialSecurityNumber\": \"Checks if a column contains Social Security numbers.\",\n    \"containsEmail\": \"Checks if a column contains email addresses.\",\n    \"containsCreditCardNumber\": \"Checks if a column contains credit card numbers.\",\n    \"hasCompleteness\": \"Checks the completeness of a column.\",\n    \"hasEntropy\": \"Checks the entropy of a column.\",\n    \"hasMax\": \"Checks if the maximum value of a column is equal to a given value.\",\n    \"hasMaxLength\": \"Checks if the maximum length of a String column is equal to a given value.\",\n    \"hasMean\": \"Checks if the mean of a numeric column is equal to a given value.\",\n    \"hasMin\": \"Checks if the minimum value of a column is equal to a given value.\",\n    \"hasMinLength\": \"Checks if the minimum length of a String column is equal to a given value.\",\n    \"hasStandardDeviation\": \"Checks if the standard deviation of a numeric column is equal to a given value.\",\n    \"hasSum\": \"Checks if the sum of a numeric column is equal to a given value.\",\n    \"isPositive\": \"Checks if all values in a numeric column are positive (>0).\",\n    \"isNonNegative\": \"Checks if all values in a numeric column are non-negative(>=0).\",\n    \"haveAnyCompleteness\": \"Checks if at least one of the specified columns is complete for each row.\",\n    \"hasUniqueness\": \"Checks the uniqueness of a column or a set of columns.\",\n    \"hasUniqueValueRatio\": \"Checks the uniqueness ratio of a column or a set of columns.\",\n    \"isUnique\": \"Checks if all values in a column are unique.\",\n    \"isComplete\": \"Checks if all specified columns in a set are complete.\",\n    \"hasSize\": \"Checks if the number of elements in a set is equal to a given value.\",\n    \"hasApproxQuantile\": \"Checks if the approximate quantile of a numeric column is equal to a given value.\",\n    \"hasCorrelation\": \"Checks the correlation between two numeric columns.\",\n    \"hasMutualInformation\": \"Checks the mutual information between two columns.\",\n    \"isGreaterThan\": \"Checks if the value of a numeric column is greater than a given value.\",\n    \"isGreaterThanOrEqualTo\": \"Checks if the value of a numeric column is greater than or equal to a given value.\",\n    \"isLessThan\": \"Checks if the value of a numeric column is less than a given value.\",\n    \"isLessThanOrEqualTo\": \"Checks if the value of a numeric column is less than or equal to a given value.\",\n    \"isContainedIn\": \"Checks if the values of a column are contained in a specified set.\",\n    \"hasDataType\": \"Checks the data type of a column.\",\n    \"hasHistogramValues\": \"Checks if the values of a numeric column match a specified histogram.\",\n    \"hasNumberOfDistinctValues\": \"Checks if the number of distinct values in a column is equal to a given value.\"\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/components/constants/static.tsx\n"));

/***/ })

});